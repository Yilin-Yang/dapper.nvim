Include: AwaitTimeout.vader
Include: StartNode2DebugAdapter.vader
Include: EnableProfiling.vader

Execute (Node2: Setup):
  " setup ThreadsBuffer, which should (itself) subscribe
  let g:tb = dapper#view#ThreadsBuffer#New(g:dapper_model, g:dapper_middletalker)
  call g:plugin.Flag('menu_expand_depth_on_map', 1)
  call g:plugin.Flag('menu_expand_depth_initial', 1)
  call g:plugin.Flag('preferred_scope_order', [])
  call g:plugin.Flag('expand_scopes_by_default', 1)
  call g:plugin.Flag('scopes_to_always_expand', [])
  call g:plugin.Flag('scopes_to_never_expand', ['Global'])

Execute (Node2: Launch Debuggee):
  call AwaitTimeout({ -> ReceivedMessage('LaunchResponse')}, 4000, 1)

Execute (Node2: Request Threads):
  call g:dapper_model.Update()
  call g:tb.Open()
  call AwaitTimeout({ -> ReceivedMessage('ThreadsResponse')}, 3000, 1)

  " normalize the PID associated with the Node process
  call g:tb.SetDoRestore({'&modifiable': 1}, '%s/(\d\+)/(#####)/')
Expect:
  <threads>
  thread id: 1	name: Node (#####)		status: breakpoint
  </threads>
