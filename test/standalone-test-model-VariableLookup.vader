Include: AwaitTimeout.vader
Include: StartMockDebugAdapter.vader
Include: SubscriptionHelpers.vader

Execute (VariableLookup: Setup):
  let g:timeout_len = 4000  " ms
  call AwaitTimeout({ -> ReceivedMessage('LaunchResponse')}, g:timeout_len, 1)

  call g:dapper_model.Update()
  call AwaitTimeout({ -> ReceivedMessage('ThreadsResponse')}, g:timeout_len, 1)

  " receive thread 1; get topmost stack frame
  let g:thread = g:dapper_model.thread(1)
  let g:st = AwaitPromise(g:thread.stackTrace(), g:timeout_len, 1)
  let g:sf = AwaitPromise(g:st.frame(0), g:timeout_len, 1)

  let g:vl = dapper#model#VariableLookup#New(g:sf, g:dapper_middletalker)

Execute (VariableLookup: Nonexistent Scope):
  AssertThrows call g:vl.VariableFromPath(['Locl'])
Then (Check Exception Text):
  AssertNotEqual -1, match(g:vader_exception, 'ERROR(NotFound)'),
      \ 'Threw wrong exception: ' . g:vader_exception

Execute (VariableLookup: Retrieve Local Scope):
  let g:scope = AwaitPromise(g:vl.VariableFromPath(['Local']), g:timeout_len, 1)
Then (Check Name of Scope):
  AssertEqual 'Local', g:scope.name()
